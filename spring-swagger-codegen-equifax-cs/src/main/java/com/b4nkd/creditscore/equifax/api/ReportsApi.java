/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.b4nkd.creditscore.equifax.api;

import com.b4nkd.creditscore.equifax.model.APIErrorResponse;
import com.b4nkd.creditscore.equifax.model.CreditReportRequest;
import com.b4nkd.creditscore.equifax.model.CreditReportResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-08T10:55:31.099545300Z[Europe/London]")
@Api(value = "reports", description = "the reports API")
public interface ReportsApi {

    @ApiOperation(value = "", nickname = "requestConsumerCreditReport", notes = "", response = CreditReportResponse.class, authorizations = {
        @Authorization(value = "OAuth2")    }, tags={ "Consumer Credit Report", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CreditReportResponse.class),
        @ApiResponse(code = 400, message = "Bad Request", response = APIErrorResponse.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = APIErrorResponse.class),
        @ApiResponse(code = 403, message = "Forbidden", response = APIErrorResponse.class),
        @ApiResponse(code = 404, message = "Not Found", response = APIErrorResponse.class),
        @ApiResponse(code = 415, message = "Unsupported Media Type", response = APIErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = APIErrorResponse.class),
        @ApiResponse(code = 501, message = "Not-implemented", response = APIErrorResponse.class),
        @ApiResponse(code = 503, message = "Service Unavailable", response = APIErrorResponse.class),
        @ApiResponse(code = 504, message = "Gateway timeout", response = APIErrorResponse.class) })
    @RequestMapping(value = "/reports/credit-report",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<CreditReportResponse> requestConsumerCreditReport(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CreditReportRequest body
,@ApiParam(value = "ID provided by client to uniquely track service request" ) @RequestHeader(value="efx-client-correlation-id", required=false) String efxClientCorrelationId
);

}

